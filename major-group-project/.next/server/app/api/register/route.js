"use strict";(()=>{var e={};e.id=569,e.ids=[569],e.modules={8013:e=>{e.exports=require("mongodb")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1005:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>c,originalPathname:()=>m,patchFetch:()=>h,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>l,staticGenerationAsyncStorage:()=>d,staticGenerationBailout:()=>g});var o={};t.r(o),t.d(o,{POST:()=>i});var s=t(884),a=t(6132),n=t(1040);async function i(e,r){try{let{searchParams:o}=new URL(e.url),s=o.get("username"),a=o.get("email"),n=o.get("pass"),i=o.get("repeatPass"),u=o.get("dob"),p=o.get("address"),{MongoClient:d}=t(8013),l=new d("mongodb://root:example@localhost:27017/");await l.connect(),console.log("Connected successfully to the server");let c=l.db("forums"),g=c.collection("register"),m=await g.insertOne({username:s,email:a,pass:n,repeatPass:i,dob:u,address:p}),h=!1;m.insertedCount>0?(h=!0,console.log("Registered valid")):(h=!1,console.log("Not Registered")),r.json({data:h})}catch(e){console.error("Error:",e),r.status(500).json({error:"Internal Server Error"})}}let u=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/register/route",pathname:"/api/register",filename:"route",bundlePath:"app/api/register/route"},resolvedPagePath:"C:\\Users\\beka\\OneDrive\\TU DUBLIN\\Y3\\Sem1\\web app\\major-group-project\\Major-Group-Project-Student-Network-Website\\major-group-project\\src\\app\\api\\register\\route.js",nextConfigOutput:"",userland:o}),{requestAsyncStorage:p,staticGenerationAsyncStorage:d,serverHooks:l,headerHooks:c,staticGenerationBailout:g}=u,m="/api/register/route";function h(){return(0,n.patchFetch)({serverHooks:l,staticGenerationAsyncStorage:d})}},884:(e,r,t)=>{e.exports=t(517)}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[271],()=>t(1005));module.exports=o})();